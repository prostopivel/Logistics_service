@using Logistics_service.ViewModels.OrderModels
@using Logistics_service.ViewModels
@model Tuple<CustomerOrderInputModel, PointOutputModel[], Marker[]>

@{
    Layout = null;
}

<meta name="realm" content="@ViewBag.RealmHeader">
<h2 class="error-message">@ViewBag.Error</h2>

<div class="container">
    <h1>Оставить заявку</h1>
    <form id="createOrderForm" asp-action="createRequest" method="post" onsubmit="createOrder(event, 'POST', '/customer/createRequest')">
        <div asp-validation-summary="All" class="error-message"></div>

        <div class="form-group">
            <label asp-for="Item1.BeginningAddress">Адрес получения:</label>
            <input id="BeginningAddress" type="text" asp-for="Item1.BeginningAddress" name="BeginningAddress" />
            <span asp-validation-for="Item1.BeginningAddress" class="error-message"></span>
        </div>

        <div class="form-group">
            <label asp-for="Item1.DestinationAddress">Адрес доставки:</label>
            <input id="DestinationAddress" type="text" asp-for="Item1.DestinationAddress" name="DestinationAddress" />
            <span asp-validation-for="Item1.DestinationAddress" class="error-message"></span>
        </div>

        <div class="form-group">
            <label asp-for="Item1.ArrivalTime">Время доставки:</label>
            <input type="datetime-local" asp-for="Item1.ArrivalTime" name="ArrivalTime" asp-format="{0:yyyy-MM-ddTHH:mm}" min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
            <span asp-validation-for="Item1.ArrivalTime" class="error-message"></span>
        </div>

        <div class="button-container">
            <button type="submit">Отправить</button>
        </div>
    </form>
</div>

<div class="image-container" id="imageContainer">
    <img src="/img/map.png" alt="map" class="responsive-image" />

    @foreach (var point in Model.Item2)
    {
        <button class="point-button"
                style="left: @($"{point.PosX}%"); top: @($"{point.PosY}%"); z-index: 101;"
                data-index="@point.Index"
                onclick="selectMarker('@point.Name.Replace("'", "\\'")', this)">
            @point.Name
        </button>
    }

    @foreach (var marker in Model.Item3)
    {
        if (marker?.Point != null)
        {
            <button class="point-button" style="left: @($"{marker.Point.PosX}%"); top: @($"{marker.Point.PosY}%"); z-index: 101; background-color: blue;"
                    data-index="@marker.Point.Index"
                    onclick="selectMarker('@marker.Point.Name.Replace("'", "\\'")', this)">
                @marker.Point.Name
            </button>
        }
    }
</div>

<h3>
    Заказы на дату:
    <input id="dateSet" type="date" />
    <button onclick="viewMapRedLine('GET', '/Customer/createRequest')">Обновить</button>
    <button onclick="addMarker()">Добавить метку</button>
    <button onclick="deleteMarker()">Удалить метку</button>
</h3>

<script id="model" type="application/json">
    @Html.Raw(Json.Serialize(Model.Item2))
</script>