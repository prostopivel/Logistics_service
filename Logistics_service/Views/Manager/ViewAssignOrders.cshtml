@using Logistics_service.ViewModels
@using Logistics_service.ViewModels.MapModels
@using Logistics_service.ViewModels.OrderModels
@using System.Globalization
@model Tuple<ReadyOrderOutputModel[], ReadyOrderOutputModel[], VehicleOutputModel[], ManagerMapModel>

@{
    Layout = null;
}

<h2 class="error-message">@ViewBag.Error</h2>

<h2>Текущие заказы:</h2>
<table>
    <thead>
        <tr>
            <th>Время поступления</th>
            <th>Email менеджера</th>
            <th>Email заказчика</th>
            <th>Время выезда/доставки</th>
            <th>Id транспорта</th>
            <th>Точки маршрута</th>
            <th>Расстояние</th>
        </tr>
    </thead>
    <tbody>
        @if (Model is not null && Model.Item1 is not null)
        {
            @foreach (var item in Model.Item1)
            {
                <tr>
                    <td>@item.CreatedAt</td>
                    <td>@item.Email</td>
                    <td>@item.CustomerEmail</td>
                    <td>
                        @if (item.Route is not null)
                        {
                            <span>@item.Route.DepartureTime</span>
                        }
                        <span>/ @item.ArrivalTime</span>
                    </td>
                    <td>@item.Vehicle.Id</td>
                    <td>
                        @if (item.Route is not null)
                        {
                            @foreach (var point in item.Route.RoutePoints)
                            {
                                <span>@point.Name</span>
                            }
                        }
                    </td>
                    <td>
                        @if (item.Route is not null)
                        {
                            <span>@((int)item.Route.Distance)</span>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<h2>Принятые заказы:</h2>
<table>
    <thead>
        <tr>
            <th>Время поступления</th>
            <th>Email менеджера</th>
            <th>Email заказчика</th>
            <th>Время выезда/доставки</th>
            <th>Id транспорта</th>
            <th>Точки маршрута</th>
            <th>Расстояние</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model.Item2)
            {
                <tr>
                    <td>@item.CreatedAt</td>
                    <td>@item.Email</td>
                    <td>@item.CustomerEmail</td>
                    <td>
                        @if (item.Route is not null)
                        {
                            <span>@item.Route.DepartureTime</span>
                        }
                        <span>/ @item.ArrivalTime</span>
                    </td>
                    <td>@item.Vehicle.Id</td>
                    <td>
                        @if (item.Route is not null)
                        {
                            @foreach (var point in item.Route.RoutePoints)
                            {
                                <span>@point.Name</span>
                            }
                        }
                    </td>
                    <td>
                        @if (item.Route is not null)
                        {
                            <span>@((int)item.Route.Distance)</span>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="image-container" id="imageContainer">
    <img src="/img/map.png" alt="map" class="responsive-image" />

    @{
        var waitingOrders = Model.Item4.WaitingOrders.SelectMany(route => route.RoutePoints).ToArray();
        var currentOrders = Model.Item4.CurrentOrders
        .Zip(Model.Item4.CurrentOrdersPoints, (route, currentPoint) =>
        currentPoint != null
        ? new[] { currentPoint }.Concat(route.Points).ToArray()
        : route.Points.ToArray())
        .SelectMany(points => points)
        .ToArray();

        foreach (var point in Model.Item4.Points)
        {
            string buttonStyle = $"left: {@point.PosX}%; top: {@point.PosY}%; z-index: 101;";
            if (Model.Item4.CurrentOrdersPoints is not null && Model.Item4.CurrentOrdersPoints.Contains(point))
            {
                buttonStyle += " background-color: darkred; z-index: 101;";
            }
            else if (waitingOrders.Contains(point) && !currentOrders.Contains(point))
            {
                buttonStyle += " background-color: yellow; z-index: 102;";
            }
            else if (currentOrders.Contains(point))
            {
                buttonStyle += " background-color: red; z-index: 103;";
            }

            <button class="point-button" style="@buttonStyle" data-index="@point.Index">
                @point.Name
            </button>
        }

        foreach (var item in Model.Item4.Vehicles ?? Enumerable.Empty<VehicleOutputModel>())
        {
            <button class="point-button"
                    style="left: @item.PosX.ToString(CultureInfo.InvariantCulture)%; top: @item.PosY.ToString(CultureInfo.InvariantCulture)%; z-index: 105; background-color: white;"
                    data-index="@item.Id">
                @item.Id
            </button>
        }
    }
</div>

<h3>Заказы на дату:    <input id="dateSet" type="date" />    <button onclick="viewMapRedLine('GET', '/Manager/ViewAssignOrders')">Обновить</button></h3>

<h1>Список автомобилей</h1>
<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Гараж</th>
            <th>Скорость</th>
            <th>Статус</th>
            <th>Маршруты</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Item3)
        {
            <tr>
                <td>@item.Id</td>
                <td>
                    @if (item.Garage != null)
                    {
                        @item.Garage.Index
                    }
                </td>
                <td>@item.Speed</td>
                <td>@item.Status</td>
                <td>
                    @if (item.Routes is not null)
                    {
                        foreach (var route in item.Routes)
                        {
                            <p>
                                @route.Value.DepartureTime - @route.Key: @((int)route.Value.Distance) м
                            </p>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<script id="model" type="application/json">
    @Html.Raw(Json.Serialize(Model.Item4.Points))
</script>
<script id="modelLine" type="application/json">
    @Html.Raw(Json.Serialize(waitingOrders))
</script>
<script id="modelRedLine" type="application/json">
    @Html.Raw(Json.Serialize(currentOrders))
</script>